{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","timerId","Refs","days","document","querySelector","hours","mins","secs","start","setInterval","deltaTime","Date","now","time","getTimeComponents","textContent","pad","value","String","padStart","Math","floor","countdownTimer"],"mappings":";;;AACA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,QAAU,KACVF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbE,KAAAA,KAAO,CACVC,KAAMC,SAASC,iBACV,KAAKN,gCACVO,MAAOF,SAASC,iBACX,KAAKN,iCACVQ,KAAMH,SAASC,iBACV,KAAKN,gCACVS,KAAMJ,SAASC,iBAAiB,KAAKN,iCAGlCU,KAAAA,QAIPA,QACOR,KAAAA,QAAUS,YAAY,KACnBC,MAAAA,EAAY,KAAKX,WAAaY,KAAKC,MACnCC,EAAO,KAAKC,kBAAkBJ,GAC/BT,KAAAA,KAAKC,KAAKa,YAAcF,EAAKX,KAE7BD,KAAAA,KAAKI,MAAMU,YAAcF,EAAKR,MAE9BJ,KAAAA,KAAKK,KAAKS,YAAcF,EAAKP,KAE7BL,KAAAA,KAAKM,KAAKQ,YAAcF,EAAKN,MAChC,KAINS,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCL,kBAAkBD,GAKb,MAAA,CAAEX,KAJQ,KAAKc,IAAII,KAAKC,MAAMR,EAAQ,QAI9BR,MAHG,KAAKW,IAAII,KAAKC,MAAOR,EAAQ,MAAyB,OAGlDP,KAFL,KAAKU,IAAII,KAAKC,MAAOR,EAAQ,KAAoB,MAEtCN,KADX,KAAKS,IAAII,KAAKC,MAAOR,EAAQ,IAAc,QAM5D,MAAMS,EAAiB,IAAI1B,EAAe,CACxCE,SAAU,WACVC,WAAY,IAAIY,KAAK;;AClDvB,aADA,QAAA,oBACA,QAAA","file":"src.b5b53f74.js","sourceRoot":"../src","sourcesContent":["\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.timerId = null;\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.Refs = {\n      days: document.querySelector(\n        `${this.selector} [data-value=\"days\"]`),\n      hours: document.querySelector(\n        `${this.selector} [data-value=\"hours\"]`),\n      mins: document.querySelector(\n        `${this.selector} [data-value=\"mins\"]`),\n      secs: document.querySelector(`${this.selector} [data-value=\"secs\"]`),\n    }\n    \n    this.start()\n    \n  };\n  \n  start() {\n    this.timerId = setInterval(() => {\n      const deltaTime = this.targetDate - Date.now();\n      const time = this.getTimeComponents(deltaTime);\n      this.Refs.days.textContent = time.days;\n  \n      this.Refs.hours.textContent = time.hours;\n  \n      this.Refs.mins.textContent = time.mins;\n      \n      this.Refs.secs.textContent = time.secs;\n     }, 1000)\n    }\n\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  };\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\nreturn { days, hours, mins, secs };\n  }\n\n};\n\nconst countdownTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021'),\n\n});","import './sass/main.scss';\nimport './js/timer'\n\n"]}